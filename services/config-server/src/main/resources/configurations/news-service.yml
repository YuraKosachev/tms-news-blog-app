spring:
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_PRODUCER_BOOTSTRAP_SERVERS}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: notificationMessage:com.tms.news.core.models.kafka.NotificationMessage
    consumer:
      bootstrap-servers: ${KAFKA_PRODUCER_BOOTSTRAP_SERVERS}
      group-id: publisherGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: 'com.tms'
        spring.json.type.mapping: newsMessage:com.tms.news.core.models.kafka.NewsMessage
  datasource:
    url: ${NEWS_DATASOURCE_URL}
    username: ${NEWS_DATASOURCE_USERNAME}
    password: ${NEWS_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    baseline-on-migrate: true
    baseline-version: 0
    enabled: true
    baseline-description: "init"
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
server:
  port: ${NEWS_SERVER_PORT}

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    disable-swagger-default-url: true
    path: /

task:
  notification:
    cron: "*/10 * * * * *"